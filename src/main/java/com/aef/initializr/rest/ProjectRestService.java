package com.aef.initializr.rest;

import com.aef.initializr.dto.ProjectDto;
import com.aef.initializr.service.PagedResult;
import com.aef.initializr.service.ProjectService;
import com.aef3.data.SortUtil;
import com.aef3.data.api.qbe.SortObject;
import com.aef3.data.api.qbe.StringSearchType;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import java.util.Date;
import com.aef3.data.api.qbe.CompareObject;
import java.util.ArrayList;

import java.util.Collections;
import java.util.List;


/* Generated By AEF Generator ( Powered by Dr.Adldoost :D ) */

@RestController
@RequestMapping("/project")
public class ProjectRestService {

    private final ProjectService projectService;

    @Autowired
    public ProjectRestService(ProjectService projectService) {
        this.projectService = projectService;
    }

    @GetMapping("/{id}")
    public ProjectDto findById(@PathVariable(name = "id")Long id) {
        return projectService.findByPrimaryKey(id);
    }

    @GetMapping("/search")
    public PagedResult search(
                                      @RequestParam(value = "id", required = false) Long id,
                                      @RequestParam(value = "name", required = false) String name,
                                      @RequestParam(value = "backendGenerationPath", required = false) String backendGenerationPath,
                                      @RequestParam(value = "frontendGenerationPath", required = false) String frontendGenerationPath,
                                      @RequestParam(value = "generationDateFrom", required = false) Date generationDateFrom,
                                      @RequestParam(value = "generationDateTo", required = false) Date generationDateTo,
                                      @RequestParam(value = "jsonMessage", required = false) String jsonMessage,
                                      @RequestParam(value = "firstIndex", required = false) Integer firstIndex,
                                      @RequestParam(value = "pageSize", required = false) Integer pageSize,
                                      @RequestParam(value = "sortField", required = false) String sortField,
                                      @RequestParam(value = "sortOrder", required = false) String sortOrder) {

            SortObject sortObject = SortUtil.generateSortObject(sortField, sortOrder);
            List<SortObject> sortObjectList = null;
            if(sortObject != null)
               sortObjectList = Collections.singletonList(sortObject);

            if(firstIndex == null)
               firstIndex = 0;
            if(pageSize == null)
               pageSize = Integer.MAX_VALUE;
            ProjectDto project = new ProjectDto();
            List<CompareObject> compareObjectList = new ArrayList<>();
            project.setId(id); 
            project.setName(name); 
            project.setBackendGenerationPath(backendGenerationPath); 
            project.setFrontendGenerationPath(frontendGenerationPath); 
            if (generationDateTo != null) {
               CompareObject cogenerationDateTo = new CompareObject();
               cogenerationDateTo.setFieldName("generationDate");
               cogenerationDateTo.setOperator(CompareObject.Operator.LE);
               cogenerationDateTo.setTarget(generationDateTo);
               compareObjectList.add(cogenerationDateTo);
           }

            if(generationDateFrom != null) {
               CompareObject cogenerationDateFrom = new CompareObject();
               cogenerationDateFrom.setFieldName("generationDate");
               cogenerationDateFrom.setOperator(CompareObject.Operator.GE);
               cogenerationDateFrom.setTarget(generationDateFrom);
               compareObjectList.add(cogenerationDateFrom);
           }
            project.setJsonMessage(jsonMessage); 

            return projectService.findPagedByExample(project,
                   sortObjectList,
                   firstIndex,
                   pageSize,
                   StringSearchType.EXPAND_BOTH_SIDES,
                   null,
                   compareObjectList
                   );
    }

}